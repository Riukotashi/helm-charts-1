---
{{- if .Values.roundcube.enabled }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ printf "%s-roundcube" (include "mailu.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: roundcube
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  {{- if .Values.roundcube.updateStrategy }}
  strategy: {{- toYaml .Values.roundcube.updateStrategy | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.roundcube.revisionHistoryLimit }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: roundcube
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: roundcube
        {{- if .Values.roundcube.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.roundcube.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.roundcube.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "common.images.pullSecrets" (dict "images" (list .Values.roundcube.image) "global" .Values.global) | nindent 6 }}
      {{- if .Values.roundcube.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.roundcube.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.roundcube.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.roundcube.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.roundcube.priorityClassName }}
      priorityClassName: {{ .Values.roundcube.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.roundcube.schedulerName }}
      schedulerName: {{ .Values.roundcube.schedulerName | quote }}
      {{- end }}
      {{- if .Values.roundcube.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.roundcube.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.roundcube.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.roundcube.initContainers }}
      initContainers: {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: roundcube
          image: {{ .Values.roundcube.image.repository }}:{{ default .Values.mailuVersion .Values.roundcube.image.tag }}
          imagePullPolicy: {{ .Values.roundcube.image.pullPolicy }}
          volumeMounts:
            - mountPath: /data
              name: data
              subPath: roundcube
            {{- if .Values.roundcube.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          env:
            - name: LOG_LEVEL
              value: {{ default .Values.logLevel .Values.roundcube.logLevel }}
            - name: MESSAGE_SIZE_LIMIT
              value: "{{ mul .Values.limits.messageSizeLimitInMegabytes (mul 1024 1024) }}"
            - name: IMAP_ADDRESS
              value: {{ include "mailu.dovecot.serviceFqdn" . }}
            - name: FRONT_ADDRESS
              value: {{ include "mailu.front.serviceFqdn" . }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "mailu.secretName" . }}
                  key: secret-key
            - name: SUBNET
              value: {{ .Values.subnet }}
            - name: ADMIN
              value: "true"
            - name: WEB_ADMIN
              value: "/admin/"
            - name: ROUNDCUBE_DB_FLAVOR
              value: {{ include "mailu.database.type" . }}
            {{- if not (eq (include "mailu.database.type" .) "sqlite") }}
            - name: ROUNDCUBE_DB_USER
              value: {{ include "mailu.database.roundcube.username" . }}
            - name: ROUNDCUBE_DB_PW
              valueFrom:
                secretKeyRef:
                  name: {{ include "mailu.database.roundcube.secretName" . }}
                  key: {{ include "mailu.database.roundcube.secretKey" . }}
            - name: ROUNDCUBE_DB_NAME
              value: {{ include "mailu.database.roundcube.name" . }}
            - name: ROUNDCUBE_DB_HOST
              value: {{ printf "%s:%s" (include "mailu.database.host" .) (include "mailu.database.port" .) | quote}}
            {{- end }}
            {{- if .Values.timezone }}
            - name: TZ
              value: {{ .Values.timezone }}
            {{- end }}
            {{- if .Values.roundcube.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.roundcube.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.roundcube.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.roundcube.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.roundcube.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.roundcube.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.roundcube.resources }}
          resources: {{- toYaml .Values.roundcube.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.roundcube.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.roundcube.startupProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command: [ "curl", "-f", "-L", "-H", "User-Agent: health", "http://localhost/" ]
          {{- end }}
          {{- if .Values.roundcube.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.roundcube.livenessProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command: [ "curl", "-f", "-L", "-H", "User-Agent: health", "http://localhost/" ]
          {{- end }}
          {{- if .Values.roundcube.readinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.roundcube.readinessProbe "enabled") "context" $) | nindent 12 }}
            exec:
              command: [ "curl", "-f", "-L", "-H", "User-Agent: health", "http://localhost/" ]
          {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "mailu.roundcube.claimName" . }}
{{- end }}
