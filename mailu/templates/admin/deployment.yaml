---
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ printf "%s-admin" (include "mailu.fullname" .) }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: admin
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  {{- if .Values.admin.updateStrategy }}
  strategy: {{- toYaml .Values.admin.updateStrategy | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.admin.revisionHistoryLimit }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: admin
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: admin
        {{- if .Values.admin.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.admin.podLabels "context" $) | nindent 8 }}
        {{- end }}
      {{- if .Values.admin.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.admin.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "common.images.pullSecrets" (dict "images" (list .Values.admin.image) "global" .Values.global) | nindent 6 }}
      {{- if .Values.admin.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.admin.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.admin.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.admin.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.admin.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.admin.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.admin.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.admin.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.admin.priorityClassName }}
      priorityClassName: {{ .Values.admin.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.admin.schedulerName }}
      schedulerName: {{ .Values.admin.schedulerName | quote }}
      {{- end }}
      {{- if .Values.admin.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.admin.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.admin.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.admin.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if .Values.admin.initContainers }}
      initContainers: {{- include "common.tplvalues.render" (dict "value" .Values.admin.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: admin
          image: {{ .Values.admin.image.repository }}:{{ default .Values.mailuVersion .Values.admin.image.tag }}
          imagePullPolicy: {{ .Values.admin.image.pullPolicy }}
          volumeMounts:
            - name: data
              subPath: admin
              mountPath: /data
            - name: data
              mountPath: /dkim
              subPath: dkim
            {{- if .Values.admin.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.admin.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
          env:
            - name: LOG_LEVEL
              value: {{ default .Values.logLevel .Values.admin.logLevel }}
            - name: QUOTA_STORAGE_URL
              value: redis://{{ include "mailu.fullname" . }}-redis/1
            - name: RATELIMIT_STORAGE_URL
              value: redis://{{ include "mailu.fullname" . }}-redis/2
            - name: POSTMASTER
              value: {{ default "postmaster" .Values.postmaster }}
            - name: DOMAIN
              value: "{{ required "'domain' needs to be set" .Values.domain }}"
            - name: HOSTNAMES
              value: "{{ join "," .Values.hostnames }}"
            - name: IMAP_ADDRESS
              value: {{ include "mailu.dovecot.serviceFqdn" . }}
            - name: POP3_ADDRESS
              value: {{ include "mailu.dovecot.serviceFqdn" . }}
            - name: SMTP_ADDRESS
              value: {{ include "mailu.postfix.serviceFqdn" . }}
            - name: AUTHSMTP_ADDRESS
              value: {{ include "mailu.postfix.serviceFqdn" . }}
            - name: REDIS_ADDRESS
              value: {{ include "mailu.redis.serviceFqdn" . }}
            {{- if .Values.roundcube.enabled }}
            - name: WEBMAIL
              value: roundcube
            - name: WEB_WEBMAIL
              value: {{ required "roundcube.uri" .Values.roundcube.uri }}
            - name: WEBMAIL_ADDRESS
              value: {{ include "mailu.roundcube.serviceFqdn" . }}
            {{- else }}
            - name: WEBMAIL
              value: none
            - name: WEBMAIL_ADDRESS
              value: localhost
            - name: WEB_WEBMAIL
              value: /
            {{- end }}
            - name: FRONT_ADDRESS
              value: {{ include "mailu.front.serviceFqdn" . }}
            - name: RECIPIENT_DELIMITER
              value: +
            - name: SUBNET
              value: {{ .Values.subnet }}
            - name: CREDENTIAL_ROUNDS
              value: {{ .Values.credentialRounds | quote }}
            - name: SESSION_COOKIE_SECURE
              value: {{ .Values.sessionCookieSecure | quote }}
            - name: SESSION_TIMEOUT
              value: {{ .Values.sessionTimeout | quote }}
            - name: PERMANENT_SESSION_LIFETIME
              value: {{ .Values.permanentSessionLifetime | quote }}
            - name: LETSENCRYPT_SHORTCHAIN
              value: {{ .Values.letsencryptShortchain | quote }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "mailu.secretName" . }}
                  key: secret-key
            - name: MESSAGE_RATELIMIT
              value: "{{ required "limits.messageRatelimit.value" .Values.limits.messageRatelimit.value }}"
            - name: MESSAGE_RATELIMIT_EXEMPTION
              value: "{{ default "" .Values.limits.messageRatelimit.exemption }}"
            - name: AUTH_RATELIMIT_IP
              value: "{{ required "limits.authRatelimit.ip" .Values.limits.authRatelimit.ip }}"
            - name: AUTH_RATELIMIT_IP_V4_MASK
              value: "{{ required "limits.authRatelimit.ipv4Mask" .Values.limits.authRatelimit.ipv4Mask }}"
            - name: AUTH_RATELIMIT_IP_V6_MASK
              value: "{{ required "limits.authRatelimit.ipv6Mask" .Values.limits.authRatelimit.ipv6Mask }}"
            - name: AUTH_RATELIMIT_USER
              value: "{{ required "limits.authRatelimit.user" .Values.limits.authRatelimit.user }}"
            - name: AUTH_RATELIMIT_EXEMPTION_LENGTH
              value: "{{ required "limits.authRatelimit.exemptionLength" .Values.limits.authRatelimit.exemptionLength }}"
            - name: AUTH_RATELIMIT_EXEMPTION
              value: "{{ default "" .Values.limits.authRatelimit.exemption }}"
            {{- if .Values.initialAccount.enabled }}
            - name: INITIAL_ADMIN_MODE
              value: {{ .Values.initialAccount.mode }}
            - name: INITIAL_ADMIN_ACCOUNT
              value: {{ required "'initialAccount.username' needs to be set if 'initialAccount' is used." .Values.initialAccount.username }}
            - name: INITIAL_ADMIN_DOMAIN
              value: {{ required "'initialAccount.domain' needs to be set if 'initialAccount' is used." .Values.initialAccount.domain }}
            - name: INITIAL_ADMIN_PW
              valueFrom:
                secretKeyRef:
                  name: {{ include "mailu.initialAccount.secretName" . }}
                  key: {{ include "mailu.initialAccount.secretKey" . }}
            {{- end }}
            - name: DB_FLAVOR
              value: {{ include "mailu.database.type" .}}
            {{- if not (eq (include "mailu.database.type" .) "sqlite") }}
            - name: DB_USER
              value: {{ include "mailu.database.username" . }}
            - name: DB_PW
              valueFrom:
                secretKeyRef:
                  name: {{ include "mailu.database.secretName" . }}
                  key: {{ include "mailu.database.secretKey" . }}
            - name: DB_HOST
              value: {{ printf "%s:%s" (include "mailu.database.host" .) (include "mailu.database.port" .) | quote}}
            - name: DB_NAME
              value: {{ include "mailu.database.name" . }}
            {{- end }}
            {{- if .Values.timezone }}
            - name: TZ
              value: {{ .Values.timezone }}
            {{- end }}
            {{- if .Values.admin.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.admin.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.admin.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.admin.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.admin.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.admin.extraEnvVarsSecret "context" $) }}
            {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.admin.resources }}
          resources: {{- toYaml .Values.admin.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.admin.startupProbe.enabled }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.admin.startupProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /sso/login
              port: http
          {{- end }}
          {{- if .Values.admin.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.admin.livenessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /sso/login
              port: http
          {{- end }}
          {{- if .Values.admin.readinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.admin.readinessProbe "enabled") "context" $) | nindent 12 }}
            httpGet:
              path: /sso/login
              port: http
          {{- end }}
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "mailu.admin.claimName" . }}
